/*!
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Actor, ColliderGeometry } from '.';
/**
 * Describes the properties of a collider.
 */
export interface ColliderLike {
    enabled: boolean;
    isTrigger: boolean;
    colliderGeometry: ColliderGeometry;
}
/**
 * A collider represents the abstraction of a physics collider object on the host.
 */
export declare class Collider implements ColliderLike {
    private $owner;
    enabled: boolean;
    isTrigger: boolean;
    private _colliderGeometry;
    /**
     * The collider geometry that the collider was initialized with.  These are a
     * readonly structure and are not able to be updated after creation.
     */
    readonly colliderGeometry: Readonly<import("./physics/colliderGeometry").SphereColliderGeometry> | Readonly<import("./physics/colliderGeometry").BoxColliderGeometry> | Readonly<import("./physics/colliderGeometry").MeshColliderGeometry>;
    /**
     * @hidden
     * Creates a new Collider instance.
     * @param $owner The owning actor instance. Field name is prefixed with a dollar sign so that it is ignored by
     * @param initFrom The collider like to use to init from.
     * the actor patch detection system.
     */
    constructor($owner: Actor, initFrom: Partial<ColliderLike>);
    /** @hidden */
    toJSON(): ColliderLike;
}
//# sourceMappingURL=collider.d.ts.map